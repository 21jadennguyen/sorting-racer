{"version":3,"sources":["SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["testColor","array1Color","array2Color","swappingColor","sortedColor","flag","SortingVisualizer","props","state","array1","array2","ARRAY_MAX","ARRAY_MIN","ARRAY_SIZE","ANIMATION_DELAY","ARRAY1_SORT","ARRAY2_SORT","this","generateNewArrays","i","push","Math","floor","random","setState","a","delay","bars1","document","getElementsByClassName","length","style","backgroundColor","bars2","num","arrNum","resetColors","selectionSort","insertionSort","bubbleSort","quickSort","bars","arrayColor","arr","min","j","temp","height","key","keyHeight","color","sorted","round","quickSortHelper","start","end","partition","px","pivot","className","id","map","value","width","Button","variant","onClick","chooseSort","Slider","max","onChange","event","size","FormControl","Select","target","borderColor","MenuItem","React","Component","n","Promise","resolve","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.219b34b9.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SortingVisualizer.scss\"\r\nimport Slider from \"@mui/material/Slider\"\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\n\r\nconst testColor = 'turquoise';\r\nconst array1Color = 'darkBlue';\r\nconst array2Color = 'blue';\r\nconst swappingColor = 'darkred';\r\nconst sortedColor = 'black';\r\nlet flag = false;\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    // Sorting Stuff\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            array1: [],\r\n            array2: [],\r\n            ARRAY_MAX: 100,\r\n            ARRAY_MIN: 5,\r\n            ARRAY_SIZE: 50,\r\n            ANIMATION_DELAY: 10,\r\n            ARRAY1_SORT: 1,\r\n            ARRAY2_SORT: 1\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNewArrays();\r\n    }\r\n\r\n    generateNewArrays() {\r\n        flag = true;\r\n        const array1 = [];\r\n        const array2 = [];\r\n        for (let i = 0; i < this.state.ARRAY_SIZE; i++) {\r\n            array1.push(Math.floor(Math.random() * (this.state.ARRAY_MAX - this.state.ARRAY_MIN + 1) + this.state.ARRAY_MIN))\r\n        }\r\n\r\n        for (let i = 0; i < this.state.ARRAY_SIZE; i++) {\r\n            array2.push(Math.floor(Math.random() * (this.state.ARRAY_MAX - this.state.ARRAY_MIN + 1) + this.state.ARRAY_MIN))\r\n        }\r\n\r\n        this.setState({array1, array2})\r\n    }\r\n\r\n    async resetColors(){\r\n        await delay(this.state.ANIMATION_DELAY*5);\r\n\r\n        let bars1 = document.getElementsByClassName('bar1');\r\n        for (let i = 0; i < bars1.length; i++) {\r\n            bars1[i].style.backgroundColor = array1Color;\r\n        }\r\n\r\n        let bars2 = document.getElementsByClassName('bar2');\r\n        for (let i = 0; i < bars2.length; i++) {\r\n            bars2[i].style.backgroundColor = array2Color;\r\n        }\r\n    }\r\n\r\n    chooseSort(num, arrNum) {\r\n        this.resetColors();\r\n        switch (num) {\r\n            case 1:\r\n                this.selectionSort(arrNum);\r\n                break;\r\n            case 2:\r\n                this.insertionSort(arrNum);\r\n                break;\r\n            case 3:\r\n                this.bubbleSort(arrNum);\r\n                break;\r\n            case 4:\r\n                this.quickSort(arrNum);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async selectionSort(arrNum) {\r\n        let bars = []\r\n        let arrayColor = ''\r\n        let arr = []\r\n        if (arrNum === 1) {\r\n            arr = this.state.array1;\r\n            arrayColor = array1Color;\r\n        } else {\r\n            arr = this.state.array2;\r\n            arrayColor = array2Color;\r\n        }\r\n        bars = document.getElementsByClassName(`bar${arrNum}`);\r\n\r\n        flag = false;\r\n        for (let i = 0; i < bars.length; i++) {\r\n            await delay(this.state.ANIMATION_DELAY);\r\n            let min = i;\r\n            bars[i].style.backgroundColor = testColor;\r\n            for (let j = i+1; j < bars.length; j++) {\r\n                if (flag) {\r\n                    return;\r\n                }\r\n                bars[j].style.backgroundColor = testColor;\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                bars[j].style.backgroundColor = arrayColor;\r\n                if (arr[j] < arr[min]) {\r\n                    bars[min].style.backgroundColor = arrayColor;\r\n                    min = j\r\n                    bars[min].style.backgroundColor = swappingColor;\r\n                }\r\n            }\r\n            \r\n            if (min !== i) {\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                let temp = arr[min];\r\n                arr[min] = arr[i];\r\n                arr[i] = temp;\r\n\r\n                temp = bars[min].style.height;\r\n                bars[min].style.height = bars[i].style.height;\r\n                bars[i].style.height = temp;\r\n\r\n                bars[min].style.backgroundColor = arrayColor;\r\n            }\r\n            bars[i].style.backgroundColor = sortedColor;\r\n        }\r\n    }\r\n\r\n    async insertionSort(arrNum){\r\n        let bars = []\r\n        let arrayColor = ''\r\n        let arr = []\r\n        if (arrNum === 1) {\r\n            arr = this.state.array1;\r\n            arrayColor = array1Color;\r\n        } else {\r\n            arr = this.state.array2;\r\n            arrayColor = array2Color;\r\n        }\r\n        bars = document.getElementsByClassName(`bar${arrNum}`);\r\n\r\n        flag = false;\r\n        let i, key, j, keyHeight;\r\n        for (i = 1; i < bars.length; i++) {\r\n            if (flag) return;\r\n            key = arr[i];\r\n            keyHeight = bars[i].style.height;\r\n            bars[i].style.backgroundColor = swappingColor;\r\n            j = i - 1;\r\n\r\n            while (j >= 0 && arr[j] > key) {\r\n                bars[j+1].style.backgroundColor = testColor;\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                bars[j+1].style.height = bars[j].style.height;\r\n                arr[j+1] = arr[j];\r\n                bars[j+1].style.backgroundColor = arrayColor;\r\n                j = j - 1;\r\n            }\r\n            arr[j+1] = key;\r\n            bars[j+1].style.color = swappingColor;\r\n            await delay(this.state.ANIMATION_DELAY);\r\n            bars[j+1].style.color = arrayColor;\r\n            bars[j+1].style.height = keyHeight;\r\n        }\r\n        for (i = 0; i < bars.length; i++) {\r\n            bars[i].style.backgroundColor = sortedColor;\r\n        }\r\n    }\r\n\r\n    async bubbleSort(arrNum) {\r\n        let sorted = false,\r\n            round = 0,\r\n            bars = [],\r\n            arrayColor = '',\r\n            arr = [];\r\n        if (arrNum === 1) {\r\n            arr = this.state.array1;\r\n            arrayColor = array1Color;\r\n        } else {\r\n            arr = this.state.array2;\r\n            arrayColor = array2Color;\r\n        }\r\n        bars = document.getElementsByClassName(`bar${arrNum}`);\r\n        flag = false;\r\n        while (!sorted) {\r\n            sorted = true;\r\n            for (let i = 0; i < arr.length - 1 - round; i++) {\r\n                if (flag) return;\r\n                bars[i].style.backgroundColor = testColor;\r\n                bars[i+1].style.backgroundColor = testColor;\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                if (arr[i] > arr[i + 1]) {\r\n                    bars[i].style.backgroundColor = swappingColor;\r\n                    bars[i+1].style.backgroundColor = swappingColor;\r\n\r\n                    let temp = arr[i];\r\n                    arr[i] = arr[i + 1];\r\n                    arr[i + 1] = temp;\r\n\r\n                    temp = bars[i].style.height;\r\n                    bars[i].style.height = bars[i+1].style.height;\r\n                    bars[i+1].style.height = temp;\r\n\r\n                    sorted = false;\r\n                }\r\n                bars[i].style.backgroundColor = arrayColor;\r\n                bars[i+1].style.backgroundColor = arrayColor;\r\n            }\r\n            bars[arr.length - 1 - round].style.backgroundColor = sortedColor;\r\n            round++;\r\n        }\r\n\r\n        for (let i = 0; i < bars.length; i++) {\r\n            bars[i].style.backgroundColor = sortedColor;\r\n        }\r\n        return arr;  \r\n    }\r\n\r\n    async quickSort(arrNum) {\r\n        let bars = []\r\n        let arrayColor = ''\r\n        let arr = []\r\n        if (arrNum === 1) {\r\n            arr = this.state.array1;\r\n            arrayColor = array1Color;\r\n        } else {\r\n            arr = this.state.array2;\r\n            arrayColor = array2Color;\r\n        }\r\n        bars = document.getElementsByClassName(`bar${arrNum}`);\r\n        \r\n        await this.quickSortHelper(arr, 0, arr.length-1, bars, arrayColor);\r\n\r\n        for (let i = 0; i < bars.length; i++) {\r\n            bars[i].style.backgroundColor = sortedColor;\r\n        }\r\n    }\r\n\r\n    async quickSortHelper(arr, start, end, bars, arrayColor) {\r\n        if (start < end) {\r\n            let px = await this.partition(arr, start, end, bars, arrayColor);\r\n            if (flag) return;\r\n    \r\n            await this.quickSortHelper(arr, start, px-1, bars, arrayColor);\r\n            if (flag) return;\r\n            await this.quickSortHelper(arr, px+1, end, bars, arrayColor);\r\n            if (flag) return;\r\n        }\r\n    }\r\n\r\n    async partition(arr, start, end, bars, arrayColor) {\r\n        let pivot = arr[end];\r\n        let i = (start-1)\r\n\r\n        bars[end].style.backgroundColor = testColor;\r\n        flag = false;\r\n        for (let j = start; j <= end-1; j++){\r\n            if (flag) return;\r\n            bars[j].style.backgroundColor = testColor;\r\n\r\n            await delay(this.state.ANIMATION_DELAY);\r\n\r\n            if (arr[j] < pivot){\r\n                i++;\r\n\r\n                bars[i].style.backgroundColor = swappingColor;\r\n                bars[j].style.backgroundColor = swappingColor;\r\n\r\n                let temp = arr[i];\r\n                arr[i] = arr[j];\r\n                arr[j] = temp;\r\n\r\n                await delay(this.state.ANIMATION_DELAY);\r\n\r\n                temp = bars[i].style.height;\r\n                bars[i].style.height = bars[j].style.height;\r\n                bars[j].style.height = temp;\r\n\r\n                bars[i].style.backgroundColor = arrayColor;\r\n            }\r\n            bars[j].style.backgroundColor = arrayColor;\r\n        }\r\n\r\n        bars[i+1].style.backgroundColor = swappingColor;\r\n        bars[end].style.backgroundColor = swappingColor;\r\n\r\n        await delay(this.state.ANIMATION_DELAY);\r\n\r\n        let temp = arr[i+1];\r\n        arr[i+1] = arr[end];\r\n        arr[end] = temp;\r\n\r\n        temp = bars[i+1].style.height;\r\n        bars[i+1].style.height = bars[end].style.height;\r\n        bars[end].style.height = temp;\r\n        \r\n        bars[i+1].style.backgroundColor = arrayColor;\r\n        bars[end].style.backgroundColor = arrayColor;\r\n\r\n        return (i + 1);\r\n    }\r\n\r\n    render() {\r\n        const {array1, array2} = this.state;\r\n\r\n        return (\r\n        <>\r\n            <div className='container' id='container'> \r\n                <div className='arrayContainer' id='arrayContainer'>\r\n                    {array1.map((value, i) => (\r\n                    <div className='bar1' id='bar1' key={i} style={{height: `${(value/this.state.ARRAY_MAX)*100}%`, backgroundColor: `${array1Color}`, width: `${100/this.state.ARRAY_SIZE}%`}}></div>\r\n                    ))}\r\n                </div>\r\n                <div className='arrayContainer' id='arrayContainer'>\r\n                    {array2.map((value, i) => (\r\n                    <div className='bar2' id='bar2' key={i} style={{height: `${(value/this.state.ARRAY_MAX)*100}%`, backgroundColor: array2Color, width: `${100/this.state.ARRAY_SIZE}%`}}></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className='bottomBar' id='bottomBar'>\r\n                <Button variant='contained' className='button' id='button' onClick={() => {this.generateNewArrays(); this.resetColors()}}>Generate New Arrays</Button>\r\n                <Button variant='contained' className='button' id='button' onClick={() => {this.chooseSort(this.state.ARRAY1_SORT, 1); this.chooseSort(this.state.ARRAY2_SORT, 2)}}>Sort Arrays</Button>\r\n                <div className='componentBox' id='componentBox' style={{width: `15%`}}>\r\n                    <div>Animation Delay: {`${this.state.ANIMATION_DELAY}`}ms</div>\r\n                    <Slider min={1} max={200} value={this.state.ANIMATION_DELAY} onChange={(event, value) => {this.setState({ANIMATION_DELAY: value})}} size='small' />\r\n                </div>\r\n                <div className='componentBox' id='componentBox' style={{width: `10%`}}>\r\n                    <div>Size of Arrays: {`${this.state.ARRAY_SIZE}`}</div>\r\n                    <Slider min={1} max={75} value={this.state.ARRAY_SIZE} onChange={(event, value) => {this.setState({ARRAY_SIZE: value})}} size='small' />\r\n                </div> \r\n                <div className='componentBox' id='componentBox' style={{width: `15%`}}>\r\n                    Array 1 Sorting Algorithm:\r\n                    <FormControl style={{width: `100%`}} >\r\n                        <Select\r\n                            value={this.state.ARRAY1_SORT}\r\n                            onChange={(event, value) => {this.setState({ARRAY1_SORT: event.target.value})}}\r\n                            style={{color: 'white', height: '55%', borderColor: 'white'}}\r\n                        >\r\n                            <MenuItem value={1}>Selection Sort</MenuItem>\r\n                            <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                            <MenuItem value={3}>Bubble Sort</MenuItem>\r\n                            <MenuItem value={4}>Quick Sort</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div> \r\n                <div className='componentBox' id='componentBox' style={{width: `15%`}}>\r\n                    <div> Array 2 Sorting Algorithm: </div>\r\n                    <FormControl style={{width: `100%`}} >\r\n                        <Select\r\n                            value={this.state.ARRAY2_SORT}\r\n                            onChange={(event, value) => {this.setState({ARRAY2_SORT: event.target.value})}}\r\n                            style={{color: 'white', height: '55%'}}\r\n                        >\r\n                            <MenuItem value={1}>Selection Sort</MenuItem>\r\n                            <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                            <MenuItem value={3}>Bubble Sort</MenuItem>\r\n                            <MenuItem value={4}>Quick Sort</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction delay(n){\r\n    return new Promise(function(resolve){\r\n        setTimeout(resolve,n);\r\n    });\r\n}\r\n","import SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}