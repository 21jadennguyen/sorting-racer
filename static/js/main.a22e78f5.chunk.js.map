{"version":3,"sources":["SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["testColor","array1Color","array2Color","swappingColor","sortedColor","flag","SortingVisualizer","props","state","array1","array2","ARRAY_MAX","ARRAY_MIN","ARRAY_SIZE","ANIMATION_DELAY","ARRAY1_SORT","ARRAY2_SORT","this","generateNewArrays","i","push","Math","floor","random","setState","bars1","document","getElementsByClassName","length","style","backgroundColor","bars2","num","arrNum","selectionSort","insertionSort","a","bars","arrayColor","arr","min","j","delay","temp","height","key","keyHeight","color","className","id","map","value","width","Button","variant","onClick","resetColors","chooseSort","Slider","max","onChange","event","size","FormControl","Select","target","borderColor","MenuItem","React","Component","n","Promise","resolve","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a22e78f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SortingVisualizer.scss\"\r\nimport Slider from \"@mui/material/Slider\"\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\n\r\nconst testColor = 'turquoise';\r\nconst array1Color = 'darkBlue';\r\nconst array2Color = 'blue';\r\nconst swappingColor = 'darkred';\r\nconst sortedColor = 'black';\r\nlet flag = false;\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    // Sorting Stuff\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            array1: [],\r\n            array2: [],\r\n            ARRAY_MAX: 100,\r\n            ARRAY_MIN: 5,\r\n            ARRAY_SIZE: 50,\r\n            ANIMATION_DELAY: 10,\r\n            ARRAY1_SORT: 1,\r\n            ARRAY2_SORT: 1\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.generateNewArrays();\r\n    }\r\n\r\n    generateNewArrays() {\r\n        flag = true;\r\n        const array1 = [];\r\n        const array2 = [];\r\n        for (let i = 0; i < this.state.ARRAY_SIZE; i++) {\r\n            array1.push(Math.floor(Math.random() * (this.state.ARRAY_MAX - this.state.ARRAY_MIN + 1) + this.state.ARRAY_MIN))\r\n        }\r\n\r\n        for (let i = 0; i < this.state.ARRAY_SIZE; i++) {\r\n            array2.push(Math.floor(Math.random() * (this.state.ARRAY_MAX - this.state.ARRAY_MIN + 1) + this.state.ARRAY_MIN))\r\n        }\r\n\r\n        this.setState({array1, array2})\r\n    }\r\n\r\n    resetColors(){\r\n        let bars1 = document.getElementsByClassName('bar1');\r\n        for (let i = 0; i < bars1.length; i++) {\r\n            bars1[i].style.backgroundColor = array1Color;\r\n        }\r\n\r\n        let bars2 = document.getElementsByClassName('bar2');\r\n        for (let i = 0; i < bars2.length; i++) {\r\n            bars2[i].style.backgroundColor = array2Color;\r\n        }\r\n    }\r\n\r\n    chooseSort(num, arrNum) {\r\n        switch (num) {\r\n            case 1:\r\n                this.selectionSort(arrNum);\r\n                break;\r\n            case 2:\r\n                this.insertionSort(arrNum);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    async selectionSort(arrNum) {\r\n        let bars = []\r\n        let arrayColor = ''\r\n        let arr = []\r\n        if (arrNum === 1) {\r\n            arr = this.state.array1;\r\n            arrayColor = array1Color;\r\n        } else {\r\n            arr = this.state.array2;\r\n            arrayColor = array2Color;\r\n        }\r\n        bars = document.getElementsByClassName(`bar${arrNum}`);\r\n\r\n        flag = false;\r\n        for (let i = 0; i < bars.length; i++) {\r\n            let min = i;\r\n            bars[i].style.backgroundColor = testColor;\r\n            for (let j = i+1; j < bars.length; j++) {\r\n                if (flag) {\r\n                    return;\r\n                }\r\n                bars[j].style.backgroundColor = testColor;\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                bars[j].style.backgroundColor = arrayColor;\r\n                if (arr[j] < arr[min]) {\r\n                    bars[min].style.backgroundColor = arrayColor;\r\n                    min = j\r\n                    bars[min].style.backgroundColor = swappingColor;\r\n                }\r\n            }\r\n            \r\n            if (min !== i) {\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                let temp = arr[min];\r\n                arr[min] = arr[i];\r\n                arr[i] = temp;\r\n\r\n                temp = bars[min].style.height;\r\n                bars[min].style.height = bars[i].style.height;\r\n                bars[i].style.height = temp;\r\n\r\n                bars[min].style.backgroundColor = arrayColor;\r\n            }\r\n            bars[i].style.backgroundColor = sortedColor;\r\n        }\r\n    }\r\n\r\n    async insertionSort(arrNum){\r\n        let bars = []\r\n        let arrayColor = ''\r\n        let arr = []\r\n        if (arrNum === 1) {\r\n            arr = this.state.array1;\r\n            arrayColor = array1Color;\r\n        } else {\r\n            arr = this.state.array2;\r\n            arrayColor = array2Color;\r\n        }\r\n        bars = document.getElementsByClassName(`bar${arrNum}`);\r\n\r\n        flag = false;\r\n        let i, key, j, keyHeight;\r\n        for (i = 1; i < bars.length; i++) {\r\n            if (flag) {\r\n                return;\r\n            }\r\n            key = arr[i];\r\n            keyHeight = bars[i].style.height;\r\n            bars[i].style.backgroundColor = swappingColor;\r\n            j = i - 1;\r\n\r\n            while (j >= 0 && arr[j] > key) {\r\n                bars[j+1].style.backgroundColor = testColor;\r\n                await delay(this.state.ANIMATION_DELAY);\r\n                bars[j+1].style.height = bars[j].style.height;\r\n                arr[j+1] = arr[j];\r\n                bars[j+1].style.backgroundColor = arrayColor;\r\n                j = j - 1;\r\n            }\r\n            arr[j+1] = key;\r\n            bars[j+1].style.color = swappingColor;\r\n            await delay(this.state.ANIMATION_DELAY);\r\n            bars[j+1].style.color = arrayColor;\r\n            bars[j+1].style.height = keyHeight;\r\n        }\r\n        for (i = 0; i < bars.length; i++) {\r\n            bars[i].style.backgroundColor = sortedColor;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {array1, array2} = this.state;\r\n\r\n        return (\r\n        <>\r\n            <div className='container' id='container'> \r\n                <div className='arrayContainer' id='arrayContainer'>\r\n                    {array1.map((value, i) => (\r\n                    <div className='bar1' id='bar1' key={i} style={{height: `${(value/this.state.ARRAY_MAX)*100}%`, backgroundColor: `${array1Color}`, width: `${100/this.state.ARRAY_SIZE}%`}}></div>\r\n                    ))}\r\n                </div>\r\n                <div className='arrayContainer' id='arrayContainer'>\r\n                    {array2.map((value, i) => (\r\n                    <div className='bar2' id='bar2' key={i} style={{height: `${(value/this.state.ARRAY_MAX)*100}%`, backgroundColor: array2Color, width: `${100/this.state.ARRAY_SIZE}%`}}></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className='bottomBar' id='bottomBar'>\r\n                <Button variant='contained' className='button' id='button' onClick={() => {this.generateNewArrays(); this.resetColors()}}>Generate New Arrays</Button>\r\n                <Button variant='contained' className='button' id='button' onClick={() => {this.chooseSort(this.state.ARRAY1_SORT, 1); this.chooseSort(this.state.ARRAY2_SORT, 2)}}>Sort Arrays</Button>\r\n                <div className='componentBox' id='componentBox' style={{width: `15%`}}>\r\n                    <div>Animation Delay: {`${this.state.ANIMATION_DELAY}`}ms</div>\r\n                    <Slider min={1} max={200} value={this.state.ANIMATION_DELAY} onChange={(event, value) => {this.setState({ANIMATION_DELAY: value})}} size='small' />\r\n                </div>\r\n                <div className='componentBox' id='componentBox' style={{width: `10%`}}>\r\n                    <div>Size of Arrays: {`${this.state.ARRAY_SIZE}`}</div>\r\n                    <Slider min={1} max={75} value={this.state.ARRAY_SIZE} onChange={(event, value) => {this.setState({ARRAY_SIZE: value})}} size='small' />\r\n                </div> \r\n                <div className='componentBox' id='componentBox' style={{width: `15%`}}>\r\n                    Array 1 Sorting Algorithm:\r\n                    <FormControl style={{width: `100%`}} >\r\n                        <Select\r\n                            value={this.state.ARRAY1_SORT}\r\n                            onChange={(event, value) => {this.setState({ARRAY1_SORT: event.target.value})}}\r\n                            style={{color: 'white', height: '55%', borderColor: 'white'}}\r\n                        >\r\n                            <MenuItem value={1}>Selection Sort</MenuItem>\r\n                            <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div> \r\n                <div className='componentBox' id='componentBox' style={{width: `15%`}}>\r\n                    <div> Array 2 Sorting Algorithm: </div>\r\n                    <FormControl style={{width: `100%`}} >\r\n                        <Select\r\n                            value={this.state.ARRAY2_SORT}\r\n                            onChange={(event, value) => {this.setState({ARRAY2_SORT: event.target.value})}}\r\n                            style={{color: 'white', height: '55%'}}\r\n                        >\r\n                            <MenuItem value={1}>Selection Sort</MenuItem>\r\n                            <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction delay(n){\r\n    return new Promise(function(resolve){\r\n        setTimeout(resolve,n);\r\n    });\r\n}\r\n\r\n// Material-ui stuff\r\n","import SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}